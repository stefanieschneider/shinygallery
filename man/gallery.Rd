% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/input-gallery.R
\name{gallery}
\alias{gallery}
\title{Create an Image Gallery}
\usage{
gallery(inputId, values, height = "200px", options = list())
}
\arguments{
\item{inputId}{The \code{input} slot that will be used to access the values.}

\item{values}{File or URL paths to images that are to be displayed.}

\item{height}{The height of each input image, e.g., \code{'200px'}; see
\link{validateCssUnit}.}

\item{options}{A list of initialization options.}
}
\value{
An image gallery control that can be added to a UI definition.
}
\description{
Create an image gallery with pagination based on file or URL
paths to images.
}
\examples{
## Only run examples in interactive R sessions
if (interactive()) {
  library(shiny)
  library(shinygallery)

  get_uri <- function(file) {
    file_ext <- paste0("image/", tools::file_ext(file))
    base64enc::dataURI(file = file, mime = file_ext)
  }

  file_path <- system.file("extdata", package = "shinygallery")

  files <- list.files(file_path, full.names = TRUE)
  values <- rep(sapply(files, get_uri), 10)

  ui <- fluidPage(
    gallery(
      "artworks", values = values,
      options = list(
        "detailsLabel" = "Details",
        "addLabel" = "Add"
      )
    )
  )

  server <- function(input, output, session) {
    observeEvent(input$jPages_click, {
      print(input$jPages_click)
    })
  }

  shinyApp(ui, server)
}

}
